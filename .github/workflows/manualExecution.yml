name: Manual execution

# Controls when the workflow will run.
on:
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      scenarioTag:
        description: 'Scenario Tag to execute(e.g. "@TC-00001")'
        type: string
        required: false
        default: '@Regression'
      baseUrl:
        description: 'Base Url(e.g. "https://trello.com")'
        type: string
        required: true
        default: 'https://trello.com'
      userEmail:
        description: 'User email (Web)(e.g. "user@gmail.com")'
        type: string
        required: false
        default: 'user@gmail.com'
      userPassword:
        description: 'User password (Web)(e.g. "password")'
        type: string
        required: false
        default: 'password'
      apiUrl:
        description: 'Api Url(e.g. "https://api.trello.com/1")'
        type: string
        required: false
        default: 'https://api.trello.com/1'
      apiKey:
        description: 'API Key(e.g. "c60889ea05a8592e")'
        type: string
        required: true
      apiToken:
        description: 'API Token(e.g. "9rc055cf5a711d2")'
        type: string
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  execution:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    # These permissions are required to generate reports.
    permissions:
      contents: write # To push a branch (gh_pages).

    steps:
      # Cloning you repository to the runner.
      - name: Checkout code
        uses: actions/checkout@v3 # Necessary to access local action.

      - name: Installing the environment
        uses: ./.github/actions/install_environment
        with:
          java-ver: 8
          java-distribution: 'temurin'
          gradle-ver: 6.9

      - name: Execute Features
        uses: ./.github/actions/execute_features
        with:
          scenarioTag: ${{ inputs.scenarioTag || '@Regression' }}
          baseUrl: ${{ inputs.baseUrl }}
          userEmail: ${{ inputs.userEmail }}
          userPassword: ${{ inputs.userPassword }}
          apiUrl: ${{ inputs.apiUrl }}
          apiKey: ${{ inputs.apiKey }}
          apiToken: ${{ inputs.apiToken }}

      - name: Deploy allure report
        uses: ./.github/actions/deploy_allure_report
        with:
          allure_results_path: ./build/allure/allure-results
          publish_name_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
